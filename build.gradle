import java.util.function.Function
import java.util.stream.Collectors
import java.util.stream.Stream

plugins {
    id 'java'
}

group 'org.example'
version '1.0-SNAPSHOT'

repositories {
    mavenCentral()
    maven { url "http://dl.bintray.com/epam/reportportal" }
}

ext {
    moduleName = "SelenideFour"
    log4j2Ver = "2.14.0"
    lombokVer = "1.18.16"
}

allprojects {
    apply plugin: 'java'
    ext {
        def addModules = this.&addModules
        reportPortalAgentVer = "5.0.3"
    }
    configurations.testCompile {
        exclude group: "org.aspectj", module: "aspectjrt"
    }
    dependencies {
        testImplementation group: 'org.apache.logging.log4j', name: 'log4j-api', version: "$log4j2Ver"
        testImplementation group: 'org.apache.logging.log4j', name: 'log4j-core', version: "$log4j2Ver"
        testImplementation "com.epam.reportportal:logger-java-log4j:$reportPortalAgentVer"

        testCompileOnly "org.projectlombok:lombok:$lombokVer"
        testAnnotationProcessor "org.projectlombok:lombok:$lombokVer"
    }
}

static List<String> addModules(String... moduleNames)
{
    return Arrays.stream(moduleNames)
            .flatMap(new Function<String, Stream<String>>() {
                @Override
                Stream<String> apply(String s) {
                    return Stream.of("--add-modules", s)
                }
            })
            .collect(Collectors.toList())
}